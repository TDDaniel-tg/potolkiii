from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from config.settings import settings


def get_main_keyboard() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    builder = ReplyKeyboardBuilder()
    
    builder.row(
        KeyboardButton(text="üìê –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–∞–∑–º–µ—Ä—ã")
    )
    builder.row(
        KeyboardButton(text="üí≥ –ü–æ–¥–ø–∏—Å–∫–∞"),
        KeyboardButton(text="üìä –ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã")
    )
    builder.row(
        KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")
    )
    
    return builder.as_markup(resize_keyboard=True)


def get_calculation_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ä–∞—Å—á–µ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="üìê –ü–µ—Ä–∏–º–µ—Ç—Ä (–ø–ª–∏–Ω—Ç—É—Å/–±–∞–≥–µ—Ç)",
            callback_data="calc_type:perimeter"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üìè –ü–ª–æ—â–∞–¥—å (–ø–æ–ª–æ—Ç–Ω–æ)",
            callback_data="calc_type:area"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üßµ –¢–∫–∞–Ω—å (–º–µ—Ç—Ä—ã)",
            callback_data="calc_type:fabric"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üìêüìè –ü–æ–ª–Ω—ã–π —Ä–∞—Å—á–µ—Ç",
            callback_data="calc_type:both"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üéØ –í—Å–µ + —Ç–∫–∞–Ω—å",
            callback_data="calc_type:complete"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üè† –ù–∞—Ç—è–∂–Ω—ã–µ –ø–æ—Ç–æ–ª–∫–∏",
            callback_data="calc_type:ceiling"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_fabric_width_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —à–∏—Ä–∏–Ω—ã —Ä—É–ª–æ–Ω–∞ —Ç–∫–∞–Ω–∏"""
    builder = InlineKeyboardBuilder()
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —à–∏—Ä–∏–Ω—ã —Ç–∫–∞–Ω–∏
    for width_name, width_cm in settings.FABRIC_WIDTHS.items():
        builder.row(
            InlineKeyboardButton(
                text=f"üìè {width_name} ({width_cm} —Å–º)",
                callback_data=f"fabric_width:{width_cm}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_subscription_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="üì¶ –ë–∞–∑–æ–≤—ã–π - 199‚ÇΩ/–º–µ—Å",
            callback_data="subscribe:basic"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üöÄ –ü—Ä–æ—Ñ–∏ - 399‚ÇΩ/–º–µ—Å",
            callback_data="subscribe:pro"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚ôæÔ∏è –ë–µ–∑–ª–∏–º–∏—Ç - 799‚ÇΩ/–º–µ—Å",
            callback_data="subscribe:unlimited"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ",
            callback_data="confirm_measurements"
        ),
        InlineKeyboardButton(
            text="‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å",
            callback_data="edit_measurements"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_confirmation_with_fabric_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∏–∑–º–µ–Ω–∏—Ç—å —à–∏—Ä–∏–Ω—É —Ç–∫–∞–Ω–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ",
            callback_data="confirm_measurements"
        ),
        InlineKeyboardButton(
            text="‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å",
            callback_data="edit_measurements"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üßµ –ò–∑–º–µ–Ω–∏—Ç—å —à–∏—Ä–∏–Ω—É —Ç–∫–∞–Ω–∏",
            callback_data="change_fabric_width"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_manual_input_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="üìù –í–≤–µ—Å—Ç–∏ —Ä–∞–∑–º–µ—Ä—ã –≤—Ä—É—á–Ω—É—é",
            callback_data="manual_input"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="üì∑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ",
            callback_data="retry_photo"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_payment_keyboard(payment_url: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å",
            url=payment_url
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É",
            callback_data="check_payment"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_cancel_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_back_to_menu_keyboard() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup()


# ========== –ö–õ–ê–í–ò–ê–¢–£–†–´ –î–õ–Ø –ù–ê–¢–Ø–ñ–ù–´–• –ü–û–¢–û–õ–ö–û–í ==========

def get_profile_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–æ—Ñ–∏–ª—è"""
    builder = InlineKeyboardBuilder()
    
    for key, value in settings.PROFILE_TYPES.items():
        builder.row(
            InlineKeyboardButton(
                text=value,
                callback_data=f"profile:{key}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_lighting_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –æ—Å–≤–µ—â–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    for key, value in settings.LIGHTING_TYPES.items():
        builder.row(
            InlineKeyboardButton(
                text=value,
                callback_data=f"lighting:{key}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_spot_diameter_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –¥–∏–∞–º–µ—Ç—Ä–∞ —Ç–æ—á–µ—á–Ω—ã—Ö —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    for diameter in settings.SPOT_LIGHT_DIAMETERS:
        builder.row(
            InlineKeyboardButton(
                text=f"{diameter}–º–º",
                callback_data=f"spot_diameter:{diameter}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text="üìù –î—Ä—É–≥–æ–π",
            callback_data="spot_diameter:custom"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_light_line_width_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —à–∏—Ä–∏–Ω—ã —Å–≤–µ—Ç–æ–≤—ã—Ö –ª–∏–Ω–∏–π"""
    builder = InlineKeyboardBuilder()
    
    for width in settings.LIGHT_LINE_WIDTHS:
        builder.row(
            InlineKeyboardButton(
                text=f"{width} —Å–º",
                callback_data=f"light_width:{width}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_corners_count_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–≥–ª–æ–≤ 90¬∞"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–≥–ª–æ–≤
    corners_options = [0, 1, 2, 3, 4]
    for i in range(0, len(corners_options), 3):  # –ü–æ 3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
        row_buttons = []
        for j in range(i, min(i + 3, len(corners_options))):
            count = corners_options[j]
            row_buttons.append(
                InlineKeyboardButton(
                    text=str(count),
                    callback_data=f"corners:{count}"
                )
            )
        builder.row(*row_buttons)
    
    builder.row(
        InlineKeyboardButton(
            text="üìù –ë–æ–ª—å—à–µ",
            callback_data="corners:more"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_crossings_count_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∏–π"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∏–π
    crossing_options = [0, 1, 2, 3]
    for i in range(0, len(crossing_options), 2):  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
        row_buttons = []
        for j in range(i, min(i + 2, len(crossing_options))):
            count = crossing_options[j]
            row_buttons.append(
                InlineKeyboardButton(
                    text=str(count),
                    callback_data=f"crossings:{count}"
                )
            )
        builder.row(*row_buttons)
    
    builder.row(
        InlineKeyboardButton(
            text="üìù –ë–æ–ª—å—à–µ",
            callback_data="crossings:more"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_yes_no_keyboard(action: str) -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –î–∞",
            callback_data=f"{action}:yes"
        ),
        InlineKeyboardButton(
            text="‚ùå –ù–µ—Ç",
            callback_data=f"{action}:no"
        )
    )
    
    return builder.as_markup()


def get_curtain_niche_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–∏—à–∏ –ø–æ–¥ —à—Ç–æ—Ä—ã"""
    builder = InlineKeyboardBuilder()
    
    for key, value in settings.CURTAIN_NICHE_TYPES.items():
        builder.row(
            InlineKeyboardButton(
                text=value,
                callback_data=f"curtain_type:{key}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_fastener_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫—Ä–µ–ø–µ–∂–∞"""
    builder = InlineKeyboardBuilder()
    
    for key, value in settings.FASTENER_TYPES.items():
        builder.row(
            InlineKeyboardButton(
                text=value,
                callback_data=f"fastener:{key}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    )
    
    return builder.as_markup()


def get_estimate_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å–æ —Å–º–µ—Ç–æ–π"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(
            text="üìÑ –°–∫–∞—á–∞—Ç—å PDF",
            callback_data="estimate:pdf"
        ),
        InlineKeyboardButton(
            text="üìä –°–∫–∞—á–∞—Ç—å Excel",
            callback_data="estimate:excel"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="üîÑ –ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç",
            callback_data="estimate:new"
        ),
        InlineKeyboardButton(
            text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
            callback_data="estimate:edit"
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="main_menu"
        )
    )
    
    return builder.as_markup() 